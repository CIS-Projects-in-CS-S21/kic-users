//
// These are messages and services relating to a friend services, such as viewing, adding,
// and removing friends, as well as generating friend recommendations for a user.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: proto/friends.proto

package proto

import (
	reflect "reflect"
	sync "sync"

	common "github.com/kic/users/pkg/proto/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//
//These are errors used to inform the client that is requesting a connection what the issue is.
//The variable names denote the issue.
type ConnectionError int32

const (
	// Two users are not friends.
	ConnectionError_NO_FRIENDSHIP ConnectionError = 0
	// The first user does not exist.
	ConnectionError_USER_ONE_DNE ConnectionError = 1
	// The second user does not exist.
	ConnectionError_USER_TWO_DNE ConnectionError = 2
)

// Enum value maps for ConnectionError.
var (
	ConnectionError_name = map[int32]string{
		0: "NO_FRIENDSHIP",
		1: "USER_ONE_DNE",
		2: "USER_TWO_DNE",
	}
	ConnectionError_value = map[string]int32{
		"NO_FRIENDSHIP": 0,
		"USER_ONE_DNE":  1,
		"USER_TWO_DNE":  2,
	}
)

func (x ConnectionError) Enum() *ConnectionError {
	p := new(ConnectionError)
	*p = x
	return p
}

func (x ConnectionError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionError) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_friends_proto_enumTypes[0].Descriptor()
}

func (ConnectionError) Type() protoreflect.EnumType {
	return &file_proto_friends_proto_enumTypes[0]
}

func (x ConnectionError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionError.Descriptor instead.
func (ConnectionError) EnumDescriptor() ([]byte, []int) {
	return file_proto_friends_proto_rawDescGZIP(), []int{0}
}

//
//Request to get the user's friends.
type GetFriendsForUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Inform the client of information regarding the user.
	User *common.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetFriendsForUserRequest) Reset() {
	*x = GetFriendsForUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_friends_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendsForUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendsForUserRequest) ProtoMessage() {}

func (x *GetFriendsForUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_friends_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendsForUserRequest.ProtoReflect.Descriptor instead.
func (*GetFriendsForUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_friends_proto_rawDescGZIP(), []int{0}
}

func (x *GetFriendsForUserRequest) GetUser() *common.User {
	if x != nil {
		return x.User
	}
	return nil
}

//
//Response to a request for getting the user's friends.
type GetFriendsForUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An array of all other users that the user is currently friends with.
	Friends []uint64 `protobuf:"varint,1,rep,packed,name=friends,proto3" json:"friends,omitempty"`
}

func (x *GetFriendsForUserResponse) Reset() {
	*x = GetFriendsForUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_friends_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFriendsForUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFriendsForUserResponse) ProtoMessage() {}

func (x *GetFriendsForUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_friends_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFriendsForUserResponse.ProtoReflect.Descriptor instead.
func (*GetFriendsForUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_friends_proto_rawDescGZIP(), []int{1}
}

func (x *GetFriendsForUserResponse) GetFriends() []uint64 {
	if x != nil {
		return x.Friends
	}
	return nil
}

//
//Request to get friend recommendations for the user.
type GetRecommendationsForUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Inform the client of information regarding the user.
	User *common.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// How many recommendations the client would like to receive.
	NumberRecommendations int32 `protobuf:"varint,2,opt,name=numberRecommendations,proto3" json:"numberRecommendations,omitempty"`
}

func (x *GetRecommendationsForUserRequest) Reset() {
	*x = GetRecommendationsForUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_friends_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendationsForUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendationsForUserRequest) ProtoMessage() {}

func (x *GetRecommendationsForUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_friends_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendationsForUserRequest.ProtoReflect.Descriptor instead.
func (*GetRecommendationsForUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_friends_proto_rawDescGZIP(), []int{2}
}

func (x *GetRecommendationsForUserRequest) GetUser() *common.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetRecommendationsForUserRequest) GetNumberRecommendations() int32 {
	if x != nil {
		return x.NumberRecommendations
	}
	return 0
}

//
//Response to a request for getting friend recommendations for the user.
type GetRecommendationsForUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An array of users that will be recommended to the user.
	Recommendations []*common.User `protobuf:"bytes,1,rep,name=recommendations,proto3" json:"recommendations,omitempty"`
}

func (x *GetRecommendationsForUserResponse) Reset() {
	*x = GetRecommendationsForUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_friends_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecommendationsForUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecommendationsForUserResponse) ProtoMessage() {}

func (x *GetRecommendationsForUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_friends_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecommendationsForUserResponse.ProtoReflect.Descriptor instead.
func (*GetRecommendationsForUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_friends_proto_rawDescGZIP(), []int{3}
}

func (x *GetRecommendationsForUserResponse) GetRecommendations() []*common.User {
	if x != nil {
		return x.Recommendations
	}
	return nil
}

//
//Update the connection between two users by modifying the connection value.
type UpdateConnectionBetweenUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the first user.
	FirstUserID uint64 `protobuf:"varint,1,opt,name=firstUserID,proto3" json:"firstUserID,omitempty"`
	// ID of the second user.
	SecondUserID uint64 `protobuf:"varint,2,opt,name=secondUserID,proto3" json:"secondUserID,omitempty"`
	// The new value for the connection between the first user
	// and second user.
	UpdateValue float32 `protobuf:"fixed32,3,opt,name=updateValue,proto3" json:"updateValue,omitempty"`
}

func (x *UpdateConnectionBetweenUsersRequest) Reset() {
	*x = UpdateConnectionBetweenUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_friends_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateConnectionBetweenUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateConnectionBetweenUsersRequest) ProtoMessage() {}

func (x *UpdateConnectionBetweenUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_friends_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateConnectionBetweenUsersRequest.ProtoReflect.Descriptor instead.
func (*UpdateConnectionBetweenUsersRequest) Descriptor() ([]byte, []int) {
	return file_proto_friends_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateConnectionBetweenUsersRequest) GetFirstUserID() uint64 {
	if x != nil {
		return x.FirstUserID
	}
	return 0
}

func (x *UpdateConnectionBetweenUsersRequest) GetSecondUserID() uint64 {
	if x != nil {
		return x.SecondUserID
	}
	return 0
}

func (x *UpdateConnectionBetweenUsersRequest) GetUpdateValue() float32 {
	if x != nil {
		return x.UpdateValue
	}
	return 0
}

//
//Retrieve the connection between two users.
type GetConnectionBetweenUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the first user.
	FirstUserID uint64 `protobuf:"varint,1,opt,name=firstUserID,proto3" json:"firstUserID,omitempty"`
	// ID of the second user.
	SecondUserID uint64 `protobuf:"varint,2,opt,name=secondUserID,proto3" json:"secondUserID,omitempty"`
}

func (x *GetConnectionBetweenUsersRequest) Reset() {
	*x = GetConnectionBetweenUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_friends_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConnectionBetweenUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConnectionBetweenUsersRequest) ProtoMessage() {}

func (x *GetConnectionBetweenUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_friends_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConnectionBetweenUsersRequest.ProtoReflect.Descriptor instead.
func (*GetConnectionBetweenUsersRequest) Descriptor() ([]byte, []int) {
	return file_proto_friends_proto_rawDescGZIP(), []int{5}
}

func (x *GetConnectionBetweenUsersRequest) GetFirstUserID() uint64 {
	if x != nil {
		return x.FirstUserID
	}
	return 0
}

func (x *GetConnectionBetweenUsersRequest) GetSecondUserID() uint64 {
	if x != nil {
		return x.SecondUserID
	}
	return 0
}

//
//Response to a request for fetching the connection between two users.
type ConnectionBetweenUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An error in fetching the connection.
	Error ConnectionError `protobuf:"varint,1,opt,name=error,proto3,enum=kic.friends.ConnectionError" json:"error,omitempty"`
	// Denotes the strength of the connection between two users.
	ConnectionStrength float32 `protobuf:"fixed32,2,opt,name=connectionStrength,proto3" json:"connectionStrength,omitempty"`
}

func (x *ConnectionBetweenUsersResponse) Reset() {
	*x = ConnectionBetweenUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_friends_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionBetweenUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionBetweenUsersResponse) ProtoMessage() {}

func (x *ConnectionBetweenUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_friends_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionBetweenUsersResponse.ProtoReflect.Descriptor instead.
func (*ConnectionBetweenUsersResponse) Descriptor() ([]byte, []int) {
	return file_proto_friends_proto_rawDescGZIP(), []int{6}
}

func (x *ConnectionBetweenUsersResponse) GetError() ConnectionError {
	if x != nil {
		return x.Error
	}
	return ConnectionError_NO_FRIENDSHIP
}

func (x *ConnectionBetweenUsersResponse) GetConnectionStrength() float32 {
	if x != nil {
		return x.ConnectionStrength
	}
	return 0
}

//
//Request for a connection between two users to be deleted.
type DeleteConnectionBetweenUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the first user.
	FirstUserID uint64 `protobuf:"varint,1,opt,name=firstUserID,proto3" json:"firstUserID,omitempty"`
	// ID of the second user.
	SecondUserID uint64 `protobuf:"varint,2,opt,name=secondUserID,proto3" json:"secondUserID,omitempty"`
}

func (x *DeleteConnectionBetweenUsersRequest) Reset() {
	*x = DeleteConnectionBetweenUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_friends_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConnectionBetweenUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionBetweenUsersRequest) ProtoMessage() {}

func (x *DeleteConnectionBetweenUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_friends_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnectionBetweenUsersRequest.ProtoReflect.Descriptor instead.
func (*DeleteConnectionBetweenUsersRequest) Descriptor() ([]byte, []int) {
	return file_proto_friends_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteConnectionBetweenUsersRequest) GetFirstUserID() uint64 {
	if x != nil {
		return x.FirstUserID
	}
	return 0
}

func (x *DeleteConnectionBetweenUsersRequest) GetSecondUserID() uint64 {
	if x != nil {
		return x.SecondUserID
	}
	return 0
}

//
//Response to a request for deleting a connection between two users.
type DeleteConnectionBetweenUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An error in deleting the connection.
	Error ConnectionError `protobuf:"varint,1,opt,name=error,proto3,enum=kic.friends.ConnectionError" json:"error,omitempty"`
}

func (x *DeleteConnectionBetweenUsersResponse) Reset() {
	*x = DeleteConnectionBetweenUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_friends_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteConnectionBetweenUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteConnectionBetweenUsersResponse) ProtoMessage() {}

func (x *DeleteConnectionBetweenUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_friends_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteConnectionBetweenUsersResponse.ProtoReflect.Descriptor instead.
func (*DeleteConnectionBetweenUsersResponse) Descriptor() ([]byte, []int) {
	return file_proto_friends_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteConnectionBetweenUsersResponse) GetError() ConnectionError {
	if x != nil {
		return x.Error
	}
	return ConnectionError_NO_FRIENDSHIP
}

//
//Request for two users to become friends.
type CreateConnectionForUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ID of the first user.
	FirstUserID uint64 `protobuf:"varint,1,opt,name=firstUserID,proto3" json:"firstUserID,omitempty"`
	// ID of the second user.
	SecondUserID uint64 `protobuf:"varint,2,opt,name=secondUserID,proto3" json:"secondUserID,omitempty"`
}

func (x *CreateConnectionForUsersRequest) Reset() {
	*x = CreateConnectionForUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_friends_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConnectionForUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionForUsersRequest) ProtoMessage() {}

func (x *CreateConnectionForUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_friends_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnectionForUsersRequest.ProtoReflect.Descriptor instead.
func (*CreateConnectionForUsersRequest) Descriptor() ([]byte, []int) {
	return file_proto_friends_proto_rawDescGZIP(), []int{9}
}

func (x *CreateConnectionForUsersRequest) GetFirstUserID() uint64 {
	if x != nil {
		return x.FirstUserID
	}
	return 0
}

func (x *CreateConnectionForUsersRequest) GetSecondUserID() uint64 {
	if x != nil {
		return x.SecondUserID
	}
	return 0
}

type CreateConnectionForUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// An error in creating the connection.
	Error ConnectionError `protobuf:"varint,1,opt,name=error,proto3,enum=kic.friends.ConnectionError" json:"error,omitempty"`
}

func (x *CreateConnectionForUsersResponse) Reset() {
	*x = CreateConnectionForUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_friends_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateConnectionForUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateConnectionForUsersResponse) ProtoMessage() {}

func (x *CreateConnectionForUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_friends_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateConnectionForUsersResponse.ProtoReflect.Descriptor instead.
func (*CreateConnectionForUsersResponse) Descriptor() ([]byte, []int) {
	return file_proto_friends_proto_rawDescGZIP(), []int{10}
}

func (x *CreateConnectionForUsersResponse) GetError() ConnectionError {
	if x != nil {
		return x.Error
	}
	return ConnectionError_NO_FRIENDSHIP
}

var File_proto_friends_proto protoreflect.FileDescriptor

var file_proto_friends_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6b, 0x69, 0x63, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x1a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x40, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x04, 0x52, 0x07, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x22,
	0x7e, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x15, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x5f, 0x0a, 0x21, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6b, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x0f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x8d, 0x01, 0x0a, 0x23, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20,
	0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x68, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x84, 0x01, 0x0a, 0x1e, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6b,
	0x69, 0x63, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74,
	0x68, 0x22, 0x6b, 0x0a, 0x23, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x5a,
	0x0a, 0x24, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x67, 0x0a, 0x1f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x22, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x22, 0x56, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2a, 0x48, 0x0a, 0x0f, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x11,
	0x0a, 0x0d, 0x4e, 0x4f, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x53, 0x48, 0x49, 0x50, 0x10,
	0x00, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4f, 0x4e, 0x45, 0x5f, 0x44, 0x4e,
	0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x54, 0x57, 0x4f, 0x5f,
	0x44, 0x4e, 0x45, 0x10, 0x02, 0x32, 0xe0, 0x05, 0x0a, 0x07, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x12, 0x62, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x46,
	0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x25, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x46,
	0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x6b, 0x69, 0x63, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x12, 0x2d, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65,
	0x74, 0x77, 0x65, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7a,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2d, 0x2e, 0x6b, 0x69,
	0x63, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x6b, 0x69, 0x63,
	0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x46, 0x6f, 0x72, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x77, 0x0a, 0x18, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f,
	0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x1c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x30, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65,
	0x74, 0x77, 0x65, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x1c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x12, 0x30, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x42, 0x65, 0x74, 0x77, 0x65, 0x65, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x17, 0x5a, 0x15, 0x2e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x73, 0x3b, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_friends_proto_rawDescOnce sync.Once
	file_proto_friends_proto_rawDescData = file_proto_friends_proto_rawDesc
)

func file_proto_friends_proto_rawDescGZIP() []byte {
	file_proto_friends_proto_rawDescOnce.Do(func() {
		file_proto_friends_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_friends_proto_rawDescData)
	})
	return file_proto_friends_proto_rawDescData
}

var (
	file_proto_friends_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
	file_proto_friends_proto_msgTypes  = make([]protoimpl.MessageInfo, 11)
	file_proto_friends_proto_goTypes   = []interface{}{
		(ConnectionError)(0),                         // 0: kic.friends.ConnectionError
		(*GetFriendsForUserRequest)(nil),             // 1: kic.friends.GetFriendsForUserRequest
		(*GetFriendsForUserResponse)(nil),            // 2: kic.friends.GetFriendsForUserResponse
		(*GetRecommendationsForUserRequest)(nil),     // 3: kic.friends.GetRecommendationsForUserRequest
		(*GetRecommendationsForUserResponse)(nil),    // 4: kic.friends.GetRecommendationsForUserResponse
		(*UpdateConnectionBetweenUsersRequest)(nil),  // 5: kic.friends.UpdateConnectionBetweenUsersRequest
		(*GetConnectionBetweenUsersRequest)(nil),     // 6: kic.friends.GetConnectionBetweenUsersRequest
		(*ConnectionBetweenUsersResponse)(nil),       // 7: kic.friends.ConnectionBetweenUsersResponse
		(*DeleteConnectionBetweenUsersRequest)(nil),  // 8: kic.friends.DeleteConnectionBetweenUsersRequest
		(*DeleteConnectionBetweenUsersResponse)(nil), // 9: kic.friends.DeleteConnectionBetweenUsersResponse
		(*CreateConnectionForUsersRequest)(nil),      // 10: kic.friends.CreateConnectionForUsersRequest
		(*CreateConnectionForUsersResponse)(nil),     // 11: kic.friends.CreateConnectionForUsersResponse
		(*common.User)(nil),                          // 12: kic.common.User
	}
)

var file_proto_friends_proto_depIdxs = []int32{
	12, // 0: kic.friends.GetFriendsForUserRequest.user:type_name -> kic.common.User
	12, // 1: kic.friends.GetRecommendationsForUserRequest.user:type_name -> kic.common.User
	12, // 2: kic.friends.GetRecommendationsForUserResponse.recommendations:type_name -> kic.common.User
	0,  // 3: kic.friends.ConnectionBetweenUsersResponse.error:type_name -> kic.friends.ConnectionError
	0,  // 4: kic.friends.DeleteConnectionBetweenUsersResponse.error:type_name -> kic.friends.ConnectionError
	0,  // 5: kic.friends.CreateConnectionForUsersResponse.error:type_name -> kic.friends.ConnectionError
	1,  // 6: kic.friends.Friends.GetFriendsForUser:input_type -> kic.friends.GetFriendsForUserRequest
	6,  // 7: kic.friends.Friends.GetConnectionBetweenUsers:input_type -> kic.friends.GetConnectionBetweenUsersRequest
	3,  // 8: kic.friends.Friends.GetRecommendationsForUser:input_type -> kic.friends.GetRecommendationsForUserRequest
	10, // 9: kic.friends.Friends.CreateConnectionForUsers:input_type -> kic.friends.CreateConnectionForUsersRequest
	5,  // 10: kic.friends.Friends.UpdateConnectionBetweenUsers:input_type -> kic.friends.UpdateConnectionBetweenUsersRequest
	8,  // 11: kic.friends.Friends.DeleteConnectionBetweenUsers:input_type -> kic.friends.DeleteConnectionBetweenUsersRequest
	2,  // 12: kic.friends.Friends.GetFriendsForUser:output_type -> kic.friends.GetFriendsForUserResponse
	7,  // 13: kic.friends.Friends.GetConnectionBetweenUsers:output_type -> kic.friends.ConnectionBetweenUsersResponse
	4,  // 14: kic.friends.Friends.GetRecommendationsForUser:output_type -> kic.friends.GetRecommendationsForUserResponse
	11, // 15: kic.friends.Friends.CreateConnectionForUsers:output_type -> kic.friends.CreateConnectionForUsersResponse
	7,  // 16: kic.friends.Friends.UpdateConnectionBetweenUsers:output_type -> kic.friends.ConnectionBetweenUsersResponse
	9,  // 17: kic.friends.Friends.DeleteConnectionBetweenUsers:output_type -> kic.friends.DeleteConnectionBetweenUsersResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_friends_proto_init() }
func file_proto_friends_proto_init() {
	if File_proto_friends_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_friends_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendsForUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_friends_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFriendsForUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_friends_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendationsForUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_friends_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecommendationsForUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_friends_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateConnectionBetweenUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_friends_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConnectionBetweenUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_friends_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionBetweenUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_friends_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConnectionBetweenUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_friends_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteConnectionBetweenUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_friends_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConnectionForUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_friends_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateConnectionForUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_friends_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_friends_proto_goTypes,
		DependencyIndexes: file_proto_friends_proto_depIdxs,
		EnumInfos:         file_proto_friends_proto_enumTypes,
		MessageInfos:      file_proto_friends_proto_msgTypes,
	}.Build()
	File_proto_friends_proto = out.File
	file_proto_friends_proto_rawDesc = nil
	file_proto_friends_proto_goTypes = nil
	file_proto_friends_proto_depIdxs = nil
}
