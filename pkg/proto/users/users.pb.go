//
// These are messages and services relating to users and user authentication.
// Some of the data models that will be used in the end products will be supplied from
// the Envoy project, specifically those found here for external authentication
// services: https://github.com/envoyproxy/envoy/blob/main/api/envoy/service/auth/v3/external_auth.proto
// We will implement the server side logic for the service they define, allowing Istio to
// send gRPC requests to our authentication server.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: proto/users.proto

package proto

import (
	reflect "reflect"
	sync "sync"

	common "github.com/kic/users/pkg/proto/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//
//These are errors used to inform the client requesting a user be added what the issue is.
//The variable names denote the issue.
type AddUserError int32

const (
	// The requested email is taken.
	AddUserError_DUPLICATE_EMAIL AddUserError = 0
	// The requested username is taken.
	AddUserError_DUPLICATE_USERNAME AddUserError = 1
	// This is a catchall for passwords that the server has deemed unacceptable,
	// checking may also be done on the client side.
	AddUserError_INVALID_PASSWORD AddUserError = 2
	// The sent date was not in the proper format.
	AddUserError_BIRTHDAY_MALFORMED AddUserError = 3
)

// Enum value maps for AddUserError.
var (
	AddUserError_name = map[int32]string{
		0: "DUPLICATE_EMAIL",
		1: "DUPLICATE_USERNAME",
		2: "INVALID_PASSWORD",
		3: "BIRTHDAY_MALFORMED",
	}
	AddUserError_value = map[string]int32{
		"DUPLICATE_EMAIL":    0,
		"DUPLICATE_USERNAME": 1,
		"INVALID_PASSWORD":   2,
		"BIRTHDAY_MALFORMED": 3,
	}
)

func (x AddUserError) Enum() *AddUserError {
	p := new(AddUserError)
	*p = x
	return p
}

func (x AddUserError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AddUserError) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_users_proto_enumTypes[0].Descriptor()
}

func (AddUserError) Type() protoreflect.EnumType {
	return &file_proto_users_proto_enumTypes[0]
}

func (x AddUserError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AddUserError.Descriptor instead.
func (AddUserError) EnumDescriptor() ([]byte, []int) {
	return file_proto_users_proto_rawDescGZIP(), []int{0}
}

//
//These are errors used to inform the client requesting a user what the issue is.
//The variable names denote the issue.
type GetUserError int32

const (
	// The given username does not match any records
	GetUserError_INVALID_USERNAME GetUserError = 0
	// User ID does not exist
	GetUserError_INVALID_ID GetUserError = 1
)

// Enum value maps for GetUserError.
var (
	GetUserError_name = map[int32]string{
		0: "INVALID_USERNAME",
		1: "INVALID_ID",
	}
	GetUserError_value = map[string]int32{
		"INVALID_USERNAME": 0,
		"INVALID_ID":       1,
	}
)

func (x GetUserError) Enum() *GetUserError {
	p := new(GetUserError)
	*p = x
	return p
}

func (x GetUserError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetUserError) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_users_proto_enumTypes[1].Descriptor()
}

func (GetUserError) Type() protoreflect.EnumType {
	return &file_proto_users_proto_enumTypes[1]
}

func (x GetUserError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetUserError.Descriptor instead.
func (GetUserError) EnumDescriptor() ([]byte, []int) {
	return file_proto_users_proto_rawDescGZIP(), []int{1}
}

// Errors with the request that the client will need to fix
type GetJWTTokenResponse_JWTError int32

const (
	// Incorrect password sent
	GetJWTTokenResponse_INVALID_PASSWORD GetJWTTokenResponse_JWTError = 0
	// Incorrect username sent
	GetJWTTokenResponse_INVALID_USERNAME GetJWTTokenResponse_JWTError = 1
)

// Enum value maps for GetJWTTokenResponse_JWTError.
var (
	GetJWTTokenResponse_JWTError_name = map[int32]string{
		0: "INVALID_PASSWORD",
		1: "INVALID_USERNAME",
	}
	GetJWTTokenResponse_JWTError_value = map[string]int32{
		"INVALID_PASSWORD": 0,
		"INVALID_USERNAME": 1,
	}
)

func (x GetJWTTokenResponse_JWTError) Enum() *GetJWTTokenResponse_JWTError {
	p := new(GetJWTTokenResponse_JWTError)
	*p = x
	return p
}

func (x GetJWTTokenResponse_JWTError) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetJWTTokenResponse_JWTError) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_users_proto_enumTypes[2].Descriptor()
}

func (GetJWTTokenResponse_JWTError) Type() protoreflect.EnumType {
	return &file_proto_users_proto_enumTypes[2]
}

func (x GetJWTTokenResponse_JWTError) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GetJWTTokenResponse_JWTError.Descriptor instead.
func (GetJWTTokenResponse_JWTError) EnumDescriptor() ([]byte, []int) {
	return file_proto_users_proto_rawDescGZIP(), []int{13, 0}
}

//
//Request for a user to be added to the user database.
type AddUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email           string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	DesiredUsername string `protobuf:"bytes,2,opt,name=desiredUsername,proto3" json:"desiredUsername,omitempty"`
	DesiredPassword string `protobuf:"bytes,3,opt,name=desiredPassword,proto3" json:"desiredPassword,omitempty"`
	// User's birthday in MM/DD/YYYY format.
	Birthday *common.Date `protobuf:"bytes,4,opt,name=birthday,proto3" json:"birthday,omitempty"`
	// User's city location.
	City string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`
}

func (x *AddUserRequest) Reset() {
	*x = AddUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserRequest) ProtoMessage() {}

func (x *AddUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserRequest.ProtoReflect.Descriptor instead.
func (*AddUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_users_proto_rawDescGZIP(), []int{0}
}

func (x *AddUserRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *AddUserRequest) GetDesiredUsername() string {
	if x != nil {
		return x.DesiredUsername
	}
	return ""
}

func (x *AddUserRequest) GetDesiredPassword() string {
	if x != nil {
		return x.DesiredPassword
	}
	return ""
}

func (x *AddUserRequest) GetBirthday() *common.Date {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *AddUserRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

//
//Response to a request for adding a user to the database.
type AddUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Denotes if the user was properly created.
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Inform the client of the information assigned to the user should they be accepted.
	CreatedUser *common.User `protobuf:"bytes,2,opt,name=createdUser,proto3" json:"createdUser,omitempty"`
	// Array of errors which need to be fixed by the client.
	Errors []AddUserError `protobuf:"varint,3,rep,packed,name=errors,proto3,enum=kic.users.AddUserError" json:"errors,omitempty"`
}

func (x *AddUserResponse) Reset() {
	*x = AddUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddUserResponse) ProtoMessage() {}

func (x *AddUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddUserResponse.ProtoReflect.Descriptor instead.
func (*AddUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_users_proto_rawDescGZIP(), []int{1}
}

func (x *AddUserResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AddUserResponse) GetCreatedUser() *common.User {
	if x != nil {
		return x.CreatedUser
	}
	return nil
}

func (x *AddUserResponse) GetErrors() []AddUserError {
	if x != nil {
		return x.Errors
	}
	return nil
}

//
//Request for obtaining user data from username
type GetUserByUsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// username sent in request
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GetUserByUsernameRequest) Reset() {
	*x = GetUserByUsernameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByUsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByUsernameRequest) ProtoMessage() {}

func (x *GetUserByUsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByUsernameRequest.ProtoReflect.Descriptor instead.
func (*GetUserByUsernameRequest) Descriptor() ([]byte, []int) {
	return file_proto_users_proto_rawDescGZIP(), []int{2}
}

func (x *GetUserByUsernameRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

//
//Response to a request for obtaining user data from a username
type GetUserByUsernameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// denotes if the user was successfully found
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// User returned in response
	User *common.User `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	// Array of errors for getting user by username
	Errors []GetUserError `protobuf:"varint,3,rep,packed,name=errors,proto3,enum=kic.users.GetUserError" json:"errors,omitempty"`
}

func (x *GetUserByUsernameResponse) Reset() {
	*x = GetUserByUsernameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByUsernameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByUsernameResponse) ProtoMessage() {}

func (x *GetUserByUsernameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByUsernameResponse.ProtoReflect.Descriptor instead.
func (*GetUserByUsernameResponse) Descriptor() ([]byte, []int) {
	return file_proto_users_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserByUsernameResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetUserByUsernameResponse) GetUser() *common.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetUserByUsernameResponse) GetErrors() []GetUserError {
	if x != nil {
		return x.Errors
	}
	return nil
}

//
//Request for obtaining userdata from id
type GetUserByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User ID sent in request
	UserID int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetUserByIDRequest) Reset() {
	*x = GetUserByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByIDRequest) ProtoMessage() {}

func (x *GetUserByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByIDRequest.ProtoReflect.Descriptor instead.
func (*GetUserByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_users_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserByIDRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

//
//Response to a request for obtaining user data from user id
type GetUserByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// denotes if the user was successfully found
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// User returned in response
	User *common.User `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	// Array of errors for getting user by username
	Errors []GetUserError `protobuf:"varint,3,rep,packed,name=errors,proto3,enum=kic.users.GetUserError" json:"errors,omitempty"`
}

func (x *GetUserByIDResponse) Reset() {
	*x = GetUserByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserByIDResponse) ProtoMessage() {}

func (x *GetUserByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserByIDResponse.ProtoReflect.Descriptor instead.
func (*GetUserByIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_users_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserByIDResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetUserByIDResponse) GetUser() *common.User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *GetUserByIDResponse) GetErrors() []GetUserError {
	if x != nil {
		return x.Errors
	}
	return nil
}

//
//Request for obtaining username from user id
type GetUserNameByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User ID sent in request
	UserID int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetUserNameByIDRequest) Reset() {
	*x = GetUserNameByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserNameByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserNameByIDRequest) ProtoMessage() {}

func (x *GetUserNameByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserNameByIDRequest.ProtoReflect.Descriptor instead.
func (*GetUserNameByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_users_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserNameByIDRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

//
//Response to a request for obtaining username from user id
type GetUserNameByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Username associated with the given user id
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GetUserNameByIDResponse) Reset() {
	*x = GetUserNameByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserNameByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserNameByIDResponse) ProtoMessage() {}

func (x *GetUserNameByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserNameByIDResponse.ProtoReflect.Descriptor instead.
func (*GetUserNameByIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_users_proto_rawDescGZIP(), []int{7}
}

func (x *GetUserNameByIDResponse) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

//
//Request to delete a user with a given user id
type DeleteUserByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// User ID sent in request
	UserID int64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *DeleteUserByIDRequest) Reset() {
	*x = DeleteUserByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserByIDRequest) ProtoMessage() {}

func (x *DeleteUserByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserByIDRequest) Descriptor() ([]byte, []int) {
	return file_proto_users_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteUserByIDRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

//
//Response to a request to delete a user with a given user id
type DeleteUserByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Denotes if the user was successfully deleted.
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Inform the client of the information assigned to the user should they be accepted.
	DeletedUser *common.User `protobuf:"bytes,2,opt,name=deletedUser,proto3" json:"deletedUser,omitempty"`
}

func (x *DeleteUserByIDResponse) Reset() {
	*x = DeleteUserByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserByIDResponse) ProtoMessage() {}

func (x *DeleteUserByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserByIDResponse.ProtoReflect.Descriptor instead.
func (*DeleteUserByIDResponse) Descriptor() ([]byte, []int) {
	return file_proto_users_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteUserByIDResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteUserByIDResponse) GetDeletedUser() *common.User {
	if x != nil {
		return x.DeletedUser
	}
	return nil
}

//
//Request to update a user's information with the information provided
type UpdateUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Only required item is the User id which is used to identify what entry to update,
	// all other non null fields will be used to update the proper column in the database
	DesiredInfo *common.User `protobuf:"bytes,1,opt,name=desiredInfo,proto3" json:"desiredInfo,omitempty"`
}

func (x *UpdateUserInfoRequest) Reset() {
	*x = UpdateUserInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoRequest) ProtoMessage() {}

func (x *UpdateUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_proto_users_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateUserInfoRequest) GetDesiredInfo() *common.User {
	if x != nil {
		return x.DesiredInfo
	}
	return nil
}

//
//Response to a request to update a user's information with the information provided
type UpdateUserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Denotes if the user was properly updated.
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Inform the client of the information assigned to the user.
	UpdatedUser *common.User `protobuf:"bytes,2,opt,name=updatedUser,proto3" json:"updatedUser,omitempty"`
	// Array of errors which need to be fixed by the client.
	Errors []AddUserError `protobuf:"varint,3,rep,packed,name=errors,proto3,enum=kic.users.AddUserError" json:"errors,omitempty"`
}

func (x *UpdateUserInfoResponse) Reset() {
	*x = UpdateUserInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserInfoResponse) ProtoMessage() {}

func (x *UpdateUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserInfoResponse.ProtoReflect.Descriptor instead.
func (*UpdateUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_proto_users_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateUserInfoResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateUserInfoResponse) GetUpdatedUser() *common.User {
	if x != nil {
		return x.UpdatedUser
	}
	return nil
}

func (x *UpdateUserInfoResponse) GetErrors() []AddUserError {
	if x != nil {
		return x.Errors
	}
	return nil
}

//
//A Request to the server to return a JWT token to authenticate the remainder of the session with the given user.
type GetJWTTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Requesting user's username
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	// Requesting user's password
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *GetJWTTokenRequest) Reset() {
	*x = GetJWTTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJWTTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJWTTokenRequest) ProtoMessage() {}

func (x *GetJWTTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJWTTokenRequest.ProtoReflect.Descriptor instead.
func (*GetJWTTokenRequest) Descriptor() ([]byte, []int) {
	return file_proto_users_proto_rawDescGZIP(), []int{12}
}

func (x *GetJWTTokenRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetJWTTokenRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

//
//The server response to a client request for a JWT, either providing the token or an error response.
type GetJWTTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Return the token as a string should the client send proper credentials
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// Tell the client the issue with the request should one exist
	Error GetJWTTokenResponse_JWTError `protobuf:"varint,2,opt,name=error,proto3,enum=kic.users.GetJWTTokenResponse_JWTError" json:"error,omitempty"`
}

func (x *GetJWTTokenResponse) Reset() {
	*x = GetJWTTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_users_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJWTTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJWTTokenResponse) ProtoMessage() {}

func (x *GetJWTTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_users_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJWTTokenResponse.ProtoReflect.Descriptor instead.
func (*GetJWTTokenResponse) Descriptor() ([]byte, []int) {
	return file_proto_users_proto_rawDescGZIP(), []int{13}
}

func (x *GetJWTTokenResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *GetJWTTokenResponse) GetError() GetJWTTokenResponse_JWTError {
	if x != nil {
		return x.Error
	}
	return GetJWTTokenResponse_INVALID_PASSWORD
}

var File_proto_users_proto protoreflect.FileDescriptor

var file_proto_users_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6b, 0x69, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x1a, 0x12,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xbc, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x64,
	0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x2c, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x44,
	0x61, 0x74, 0x65, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74,
	0x79, 0x22, 0x90, 0x01, 0x0a, 0x0f, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x32, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x22, 0x36, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8c, 0x01, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6b, 0x69, 0x63,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x2c, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x86, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x24, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x69, 0x63, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x22, 0x30, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x22, 0x35, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2f, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x66, 0x0a, 0x16,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x32, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x55, 0x73, 0x65, 0x72, 0x22, 0x4b, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0x97, 0x01, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6b, 0x69,
	0x63, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x6b, 0x69, 0x63,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x06, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x22, 0x4c, 0x0a, 0x12, 0x47,
	0x65, 0x74, 0x4a, 0x57, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x4a, 0x57, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x57, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4a, 0x57, 0x54, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x36, 0x0a, 0x08, 0x4a, 0x57, 0x54, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x41,
	0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x2a, 0x69,
	0x0a, 0x0c, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x13,
	0x0a, 0x0f, 0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x45, 0x4d, 0x41, 0x49,
	0x4c, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x55, 0x50, 0x4c, 0x49, 0x43, 0x41, 0x54, 0x45,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x49,
	0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x10,
	0x02, 0x12, 0x16, 0x0a, 0x12, 0x42, 0x49, 0x52, 0x54, 0x48, 0x44, 0x41, 0x59, 0x5f, 0x4d, 0x41,
	0x4c, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x34, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x00, 0x12,
	0x0e, 0x0a, 0x0a, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x32,
	0xcd, 0x04, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x4c, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x4a, 0x57, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1d, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x57, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x57, 0x54, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x19, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x41,
	0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x6b, 0x69, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5e, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23,
	0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1d, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x21, 0x2e, 0x6b, 0x69, 0x63,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x6b, 0x69, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x55, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x20, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6b, 0x69, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x2e, 0x6b, 0x69, 0x63,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6b,
	0x69, 0x63, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x15, 0x5a, 0x13, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73,
	0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_users_proto_rawDescOnce sync.Once
	file_proto_users_proto_rawDescData = file_proto_users_proto_rawDesc
)

func file_proto_users_proto_rawDescGZIP() []byte {
	file_proto_users_proto_rawDescOnce.Do(func() {
		file_proto_users_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_users_proto_rawDescData)
	})
	return file_proto_users_proto_rawDescData
}

var (
	file_proto_users_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
	file_proto_users_proto_msgTypes  = make([]protoimpl.MessageInfo, 14)
	file_proto_users_proto_goTypes   = []interface{}{
		(AddUserError)(0),                 // 0: kic.users.AddUserError
		(GetUserError)(0),                 // 1: kic.users.GetUserError
		(GetJWTTokenResponse_JWTError)(0), // 2: kic.users.GetJWTTokenResponse.JWTError
		(*AddUserRequest)(nil),            // 3: kic.users.AddUserRequest
		(*AddUserResponse)(nil),           // 4: kic.users.AddUserResponse
		(*GetUserByUsernameRequest)(nil),  // 5: kic.users.GetUserByUsernameRequest
		(*GetUserByUsernameResponse)(nil), // 6: kic.users.GetUserByUsernameResponse
		(*GetUserByIDRequest)(nil),        // 7: kic.users.GetUserByIDRequest
		(*GetUserByIDResponse)(nil),       // 8: kic.users.GetUserByIDResponse
		(*GetUserNameByIDRequest)(nil),    // 9: kic.users.GetUserNameByIDRequest
		(*GetUserNameByIDResponse)(nil),   // 10: kic.users.GetUserNameByIDResponse
		(*DeleteUserByIDRequest)(nil),     // 11: kic.users.DeleteUserByIDRequest
		(*DeleteUserByIDResponse)(nil),    // 12: kic.users.DeleteUserByIDResponse
		(*UpdateUserInfoRequest)(nil),     // 13: kic.users.UpdateUserInfoRequest
		(*UpdateUserInfoResponse)(nil),    // 14: kic.users.UpdateUserInfoResponse
		(*GetJWTTokenRequest)(nil),        // 15: kic.users.GetJWTTokenRequest
		(*GetJWTTokenResponse)(nil),       // 16: kic.users.GetJWTTokenResponse
		(*common.Date)(nil),               // 17: kic.common.Date
		(*common.User)(nil),               // 18: kic.common.User
	}
)

var file_proto_users_proto_depIdxs = []int32{
	17, // 0: kic.users.AddUserRequest.birthday:type_name -> kic.common.Date
	18, // 1: kic.users.AddUserResponse.createdUser:type_name -> kic.common.User
	0,  // 2: kic.users.AddUserResponse.errors:type_name -> kic.users.AddUserError
	18, // 3: kic.users.GetUserByUsernameResponse.user:type_name -> kic.common.User
	1,  // 4: kic.users.GetUserByUsernameResponse.errors:type_name -> kic.users.GetUserError
	18, // 5: kic.users.GetUserByIDResponse.user:type_name -> kic.common.User
	1,  // 6: kic.users.GetUserByIDResponse.errors:type_name -> kic.users.GetUserError
	18, // 7: kic.users.DeleteUserByIDResponse.deletedUser:type_name -> kic.common.User
	18, // 8: kic.users.UpdateUserInfoRequest.desiredInfo:type_name -> kic.common.User
	18, // 9: kic.users.UpdateUserInfoResponse.updatedUser:type_name -> kic.common.User
	0,  // 10: kic.users.UpdateUserInfoResponse.errors:type_name -> kic.users.AddUserError
	2,  // 11: kic.users.GetJWTTokenResponse.error:type_name -> kic.users.GetJWTTokenResponse.JWTError
	15, // 12: kic.users.Users.GetJWTToken:input_type -> kic.users.GetJWTTokenRequest
	3,  // 13: kic.users.Users.AddUser:input_type -> kic.users.AddUserRequest
	5,  // 14: kic.users.Users.GetUserByUsername:input_type -> kic.users.GetUserByUsernameRequest
	7,  // 15: kic.users.Users.GetUserByID:input_type -> kic.users.GetUserByIDRequest
	9,  // 16: kic.users.Users.GetUserNameByID:input_type -> kic.users.GetUserNameByIDRequest
	11, // 17: kic.users.Users.DeleteUserByID:input_type -> kic.users.DeleteUserByIDRequest
	13, // 18: kic.users.Users.UpdateUserInfo:input_type -> kic.users.UpdateUserInfoRequest
	16, // 19: kic.users.Users.GetJWTToken:output_type -> kic.users.GetJWTTokenResponse
	4,  // 20: kic.users.Users.AddUser:output_type -> kic.users.AddUserResponse
	6,  // 21: kic.users.Users.GetUserByUsername:output_type -> kic.users.GetUserByUsernameResponse
	8,  // 22: kic.users.Users.GetUserByID:output_type -> kic.users.GetUserByIDResponse
	10, // 23: kic.users.Users.GetUserNameByID:output_type -> kic.users.GetUserNameByIDResponse
	12, // 24: kic.users.Users.DeleteUserByID:output_type -> kic.users.DeleteUserByIDResponse
	14, // 25: kic.users.Users.UpdateUserInfo:output_type -> kic.users.UpdateUserInfoResponse
	19, // [19:26] is the sub-list for method output_type
	12, // [12:19] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_proto_users_proto_init() }
func file_proto_users_proto_init() {
	if File_proto_users_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_users_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByUsernameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByUsernameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserNameByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserNameByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateUserInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJWTTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_users_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJWTTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_users_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_users_proto_goTypes,
		DependencyIndexes: file_proto_users_proto_depIdxs,
		EnumInfos:         file_proto_users_proto_enumTypes,
		MessageInfos:      file_proto_users_proto_msgTypes,
	}.Build()
	File_proto_users_proto = out.File
	file_proto_users_proto_rawDesc = nil
	file_proto_users_proto_goTypes = nil
	file_proto_users_proto_depIdxs = nil
}
